user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/log/nginx/nginx.pid;

events {
    multi_accept on;
    worker_connections 2048;
}

# TODO see https://nginxconfig.io/
http {

    charset utf-8;
    server_tokens off;
    tcp_nopush on;
    tcp_nodelay on;

    # Mozilla Intermediate configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    server {
        listen 443 ssl default_server;
        server_name _;

        ssl_certificate         /etc/nginx/certificate.crt;
        ssl_certificate_key     /etc/nginx/certificate.key;

        location /.eenv.properties {
            alias /usr/share/nginx/html/eenv.properties;
            # TODO INTERNAL_NETWORK
        }

        location /chat {
            proxy_set_header Host $http_host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forward-Proto http;
            proxy_set_header X-Nginx-Proxy true;

            proxy_pass http://rocketchat:3000/chat;

            proxy_redirect off;
        }

        location /file-upload/ {
           proxy_pass http://rocketchat:3000/chat/file-upload/;
        }

        location /bookstack/ {
            proxy_pass http://bookstack:80/;
        }

        location /services/ {
            proxy_pass http://elexis-server:8380/services/;
        }

        location /fhir/ {
            proxy_pass http://elexis-server:8380/fhir/;
        }


    }
}

stream {
    # LDAPS -> LDAP
    server {
        listen 636 ssl;
        proxy_pass ldap:389;
        ssl_certificate         /etc/nginx/certificate.crt;
        ssl_certificate_key     /etc/nginx/certificate.key;
    }
}