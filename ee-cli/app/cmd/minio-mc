#!/usr/bin/env bash
export $(grep ^S3 ${INSTALL_DIR}.env | xargs)
export ACCESS_KEY=$2
export ACCESS_SECRET=$3

# mc config file is in ~/.mc/config.json
mkdir -p ${INSTALL_DIR}/.mc
cat <<EOF | envsubst >${INSTALL_DIR}/.mc/config.json
{
	"version": "10",
	"aliases": {
		"minio": {
			"url": "\$S3_LIKE_SERVICE_ENDPOINT_URL",
			"accessKey": "\$ACCESS_KEY",
			"secretKey": "\$ACCESS_SECRET",
			"api": "s3v4",
			"path": "auto"
		}
	}
}
EOF

function write_policy {
cat <<EOF | envsubst >${INSTALL_DIR}/.mc/policy.json
{
 "Version": "2012-10-17",
 "Statement": [
  {
   "Effect": "Allow",
   "Action": [
    "s3:*"
   ],
   "Resource": [
    "arn:aws:s3:::$1/*"
   ]
  }
 ]
}
EOF
}

function cmd {
    docker run --rm -v ${INSTALL_DIR}/.mc/config.json:/root/.mc/config.json:ro -v ${INSTALL_DIR}/.mc/policy.json:/root/.mc/policy.json minio/mc "$@"
}

if [ "$1" == "ee-initialize" ]; then
    export ACCESS_KEY=$2
    export ACCESS_SECRET=$3
    if [ -z "$ACCESS_KEY" ] || [ -z "$ACCESS_SECRET" ]; then
        echo "Please provide ACCESS_KEY and ACCESS_SECRET"
        exit 1
    fi
    shift
    shift
    shift

    NOW=$(date)

    # nextcloud
    echo "### Creating/Updating accesskey for ee-nextcloud ..."
    NEXTCLOUD_S3_ACCESS_KEY_SECRET=$(randomSecret | cut -c 1-40)
    cmd admin accesskey remove -q minio $NEXTCLOUD_S3_ACCESS_KEY_ID 
    write_policy $NEXTCLOUD_S3_ACCESS_KEY_ID 
    cmd admin accesskey create -q --access-key $NEXTCLOUD_S3_ACCESS_KEY_ID --secret-key $NEXTCLOUD_S3_ACCESS_KEY_SECRET --description "Generated $NOW" --policy /root/.mc/policy.json minio
    sed -i -e 's/\(NEXTCLOUD_S3_ACCESS_KEY_SECRET=\).*$/\1'"${NEXTCLOUD_S3_ACCESS_KEY_SECRET}"'/' ${INSTALL_DIR}/.env
    cmd mb --ignore-existing minio/$NEXTCLOUD_S3_BUCKET_NAME

    # synapse
    echo "### Creating/Updating accesskey for ee-synapse ..."
    MATRIX_S3_ACCESS_KEY_SECRET=$(randomSecret | cut -c 1-40)
    cmd admin accesskey remove -q minio $MATRIX_S3_ACCESS_KEY_ID 
    write_policy $MATRIX_S3_ACCESS_KEY_ID 
    cmd admin accesskey create -q --access-key $MATRIX_S3_ACCESS_KEY_ID --secret-key $MATRIX_S3_ACCESS_KEY_SECRET --description "Generated $NOW" --policy /root/.mc/policy.json minio
    sed -i -e 's/\(MATRIX_S3_ACCESS_KEY_SECRET=\).*$/\1'"${MATRIX_S3_ACCESS_KEY_SECRET}"'/' ${INSTALL_DIR}/.env
    cmd mb --ignore-existing minio/$MATRIX_S3_BUCKET_NAME

    echo "### Initialization done."
    echo "### Please delete accesskey $ACCESS_KEY"

    rm -f ${INSTALL_DIR}/.mc/config.json ${INSTALL_DIR}/.mc/policy.json 
    rmdir ${INSTALL_DIR}/.mc/
    exit 0
fi

# Install the currently used s3 certificate as the valid one
# Does not work correctly for correct certificas, as it can't extract the full chain
if [ "$1" == "install-cert" ]; then
    mkdir -p site/s3
    S3_IP=${S3_LIKE_SERVICE_ENDPOINT_URL#https://}
    echo "Trying to fetch certificate from $S3_IP"
    openssl s_client -showcerts -connect $S3_IP </dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >site/s3/service-cert.pem
    VALID_UNTIL=$(openssl x509 -enddate -noout -in site/s3/service-cert.pem | cut -d= -f2)
    echo "Certificate is valid until: $VALID_UNTIL"
    exit 0
fi

cmd $@

