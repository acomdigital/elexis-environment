# This file is a template, and might need editing before it works on your project.
# see https://docs.gitlab.com/ce/ci/yaml/README.html for all available options

before_script:
  - docker pull mysql:8
  - docker run --name test-mysql-8 --rm -e MYSQL_ROOT_PASSWORD=test-pw -v $PWD/.test/mysql/:/docker-entrypoint-initdb.d/ -p 33306:3306 -d mysql:8

after_script:
  - ./ee system cmd stop
  - ./ee system cmd rm -f
  - docker volume prune -f
  - docker stop test-mysql-8
  - ./ee setup clean

stages:
  - testCore
  - testFull

#
# Elexis-Environment core only: ldap, keycloak, web, elexis-server
#
core: 
  stage: testCore
  script:
    - cp .test/.env.core .env
    - source .env
    - ./ee system cmd pull -q # while mysql starts up
    - sleep 15 # wait for mysql - lame solution
    - ./ee setup configure # prepare setup and generate self-signed-cert next
    - openssl req -x509 -newkey rsa:2048 -keyout ./docker/compose/assets/web/ssl/certificate.key -out ./docker/compose/assets/web/ssl/certificate.crt -days 365 -nodes -subj "/CN=localhost"
    - ./ee system cmd up -d
    - .test/wait_for_http_200_es.sh
    - ./ee setup runtest
    - ./ee system cmd stop
    - ./ee system cmd rm -f
    - rm .env

#
# Elexis-Environment all-modules-enabled
# - should be able to handle the already initialized volumes
#
full:
  stage: testFull
  script:
    - cp ./test/.env.full .env
    - source .env
    - ./ee system cmd pull -q # while mysql starts up
    - sleep 15 # wait for mysql - lame solution
    - ./ee setup configure # prepare setup and generate self-signed-cert next
    - openssl req -x509 -newkey rsa:2048 -keyout ./docker/compose/assets/web/ssl/certificate.key -out ./docker/compose/assets/web/ssl/certificate.crt -days 365 -nodes -subj "/CN=localhost"
    - ./ee system cmd up -d
    - .test/wait_for_http_200_es.sh
    - ./ee setup runtest
    - rm .env